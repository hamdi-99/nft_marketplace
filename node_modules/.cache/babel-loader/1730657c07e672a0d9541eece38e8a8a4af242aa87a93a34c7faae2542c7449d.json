{"ast":null,"code":"var _jsxFileName = \"/home/hamdiharaketi/Desktop/projects/RTW3-Week7-NFT-Marketplace-main/src/components/Marketplace.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Marketplace() {\n  _s();\n  const sampleData = [{\n    \"name\": \"NFT#1\",\n    \"description\": \"Alchemy's First NFT\",\n    \"website\": \"http://axieinfinity.io\",\n    \"image\": \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n    \"price\": \"0.03ETH\",\n    \"currentlySelling\": \"True\",\n    \"address\": \"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\"\n  }, {\n    \"name\": \"NFT#2\",\n    \"description\": \"Alchemy's Second NFT\",\n    \"website\": \"http://axieinfinity.io\",\n    \"image\": \"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\n    \"price\": \"0.03ETH\",\n    \"currentlySelling\": \"True\",\n    \"address\": \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"\n  }, {\n    \"name\": \"NFT#3\",\n    \"description\": \"Alchemy's Third NFT\",\n    \"website\": \"http://axieinfinity.io\",\n    \"image\": \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n    \"price\": \"0.03ETH\",\n    \"currentlySelling\": \"True\",\n    \"address\": \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"\n  }];\n  const [data, updateData] = useState(sampleData);\n  const [dataFetched, updateFetched] = useState(false);\n  async function getAllNFTs() {\n    const ethers = require('ethers');\n    const provider = new ethers.provider.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n    let transaction = await contract.getAllNFTs();\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description\n      };\n      return item;\n    }));\n    updateFetched(true);\n    updateData(items);\n  }\n  if (!dataFetched) getAllNFTs();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col place-items-center mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:text-xl font-bold text-white\",\n        children: \"Top NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\",\n        children: data.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(NFTTile, {\n            data: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Marketplace, \"eoOZIC3fpxTnVeH+5XYnEv0RFm0=\");\n_c = Marketplace;\nvar _c;\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["Navbar","NFTTile","MarketplaceJSON","axios","useState","Marketplace","sampleData","data","updateData","dataFetched","updateFetched","getAllNFTs","ethers","require","provider","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","address","abi","transaction","items","Promise","all","map","i","tokenURI","tokenId","meta","get","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","value","index"],"sources":["/home/hamdiharaketi/Desktop/projects/RTW3-Week7-NFT-Marketplace-main/src/components/Marketplace.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nexport default function Marketplace() {\nconst sampleData = [\n    {\n        \"name\": \"NFT#1\",\n        \"description\": \"Alchemy's First NFT\",\n        \"website\":\"http://axieinfinity.io\",\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n        \"price\":\"0.03ETH\",\n        \"currentlySelling\":\"True\",\n        \"address\":\"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n    {\n        \"name\": \"NFT#2\",\n        \"description\": \"Alchemy's Second NFT\",\n        \"website\":\"http://axieinfinity.io\",\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\n        \"price\":\"0.03ETH\",\n        \"currentlySelling\":\"True\",\n        \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n    {\n        \"name\": \"NFT#3\",\n        \"description\": \"Alchemy's Third NFT\",\n        \"website\":\"http://axieinfinity.io\",\n        \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n        \"price\":\"0.03ETH\",\n        \"currentlySelling\":\"True\",\n        \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n];\nconst [data, updateData] = useState(sampleData);\nconst [dataFetched, updateFetched] = useState(false);\n\nasync function getAllNFTs(){\n    const ethers = require('ethers');\n    const provider = new ethers.provider.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n\n    let contract = new ethers.Contract(MarketplaceJSON.address,MarketplaceJSON.abi,signer);\n\n    let transaction = await contract.getAllNFTs();\n\n    const items = await Promise.all(transaction.map(async i => {\n        const tokenURI = await contract.tokenURI(i.tokenId);\n        let meta = await axios.get(tokenURI);\n        meta = meta.data;\n\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n\n        let item = {\n            price,\n            tokenId: i.tokenId.toNumber(),\n            seller: i.seller,\n            owner: i.owner,\n            image: meta.image,\n            name: meta.name,\n            description: meta.description,\n        }\n        return item;\n    }))\n\n    updateFetched(true);\n    updateData(items);\n}\n\nif(!dataFetched)\n    getAllNFTs();\n\nreturn (\n    <div>\n        <Navbar></Navbar>\n        <div className=\"flex flex-col place-items-center mt-20\">\n            <div className=\"md:text-xl font-bold text-white\">\n                Top NFTs\n            </div>\n            <div className=\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\">\n                {data.map((value, index) => {\n                    return <NFTTile data={value} key={index}></NFTTile>;\n                })}\n            </div>\n        </div>            \n    </div>\n);\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}